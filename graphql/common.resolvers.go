package graphql

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"

	"encore.app/admin"
	"encore.app/graphql/generated"
	"encore.app/trainee"
	"encore.app/trainer"
)

// User is the resolver for the user field.
func (r *trainerResolver) User(ctx context.Context, obj *trainee.Trainer) (*admin.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Certifications is the resolver for the certifications field.
func (r *trainerResolver) Certifications(ctx context.Context, obj *trainee.Trainer) ([]*trainer.Certification, error) {
	panic(fmt.Errorf("not implemented: Certifications - certifications"))
}

// Bio is the resolver for the bio field.
func (r *trainerResolver) Bio(ctx context.Context, obj *trainee.Trainer) (string, error) {
	panic(fmt.Errorf("not implemented: Bio - bio"))
}

// HourlyRate is the resolver for the hourlyRate field.
func (r *trainerResolver) HourlyRate(ctx context.Context, obj *trainee.Trainer) (float64, error) {
	panic(fmt.Errorf("not implemented: HourlyRate - hourlyRate"))
}

// Trainer returns generated.TrainerResolver implementation.
func (r *Resolver) Trainer() generated.TrainerResolver { return &trainerResolver{r} }

type trainerResolver struct{ *Resolver }
